#!/usr/bin/env node

var fs = require('fs'),
	path = require('path'),
	cp = require('child_process'),
	event = new (require('events').EventEmitter)(),
	slab = require('./../vendor/slab/src/slab.js').slab,
	wrup = require('wrapup')(),
	jsp = require('uglify-js').parser,
	pro = require('uglify-js').uglify

var args = process.argv.splice(1);
if (!args[1] || !fs.statSync(args[1]).isDirectory()) {
	console.log('Please specify a directory to put the built files')
	process.exit(1)
}

var root = path.normalize(path.dirname(args[0])+'/..'),
	dest = path.resolve(args[1]),
	js = ''

console.log('> Building mootools')
cp.exec(root+'/vendor/mootools-core/build', function(error, stdout, stderr){
	js += stdout
	event.emit('mootools.build')
})

event.once('mootools.build', function(){
	console.log('> Adding third-party files')
	var files = [
			'/vendor/slab-loader/src/slab.load.js',
			'/vendor/CodeMirror2/lib/codemirror.js',
			'/vendor/CodeMirror2/mode/xml/xml.js',
			'/vendor/CodeMirror2/mode/css/css.js',
			'/vendor/CodeMirror2/mode/javascript/javascript.js'
		], file
	while (files.length) {
		file = files.shift()
		console.log('  - '+file)
		js += fs.readFileSync(root+file, 'utf8')
	}
	event.emit('files.build')
})

event.once('files.build', function(){
	console.log('> Compiling templates')
	var files = fs.readdirSync(root+'/src/tpl'), tpl = '', out = ''
	while (files.length) {
		tpl += fs.readFileSync(root+'/src/tpl/'+files.shift(), 'utf8')
	}

	out += '(function(){'+"\n"+
		slab.generate('templates', tpl)+"\n"+
		'slab.register(templates);'+"\n"+
		'})();'
	js += out
	event.emit('tpl.build')
})

event.once('tpl.build', function(){
	console.log('> Wrapping up application code')
	js += wrup.require(root+'/src/js/init.js').up();
	event.emit('wrup.build')
})

event.once('wrup.build', function(){
	console.log('> Uglifying source')
	var ast = jsp.parse(js)
	ast = pro.ast_mangle(ast)
	ast = pro.ast_squeeze(ast)
	fs.writeFileSync(dest+'/tinker.min.js', pro.gen_code(ast), 'utf8')
})

